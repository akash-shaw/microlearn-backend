trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'microlearn-service-connection'
  
  # Web app name
  webAppName: 'microlearn-backend'
  
  # Environment name
  environmentName: 'production'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Working directory
  workingDirectory: '$(System.DefaultWorkingDirectory)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci --only=production
      displayName: 'npm install dependencies'
      workingDirectory: $(workingDirectory)

    - script: |
        echo "Creating package.json scripts if needed"
        # Add any build commands here if you have them
        # npm run build
      displayName: 'Build application (if needed)'
      workingDirectory: $(workingDirectory)

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(workingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: 'webAppLinux'
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              runtimeStack: 'NODE|18-lts'
              startUpCommand: 'node server.js'
              
          - task: AzureAppServiceSettings@1
            displayName: 'Azure App Service Settings'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              resourceGroupName: 'microlearn-rg'  # Update with your resource group
              appSettings: |
                [
                  {
                    "name": "NODE_ENV",
                    "value": "production"
                  },
                  {
                    "name": "PORT",
                    "value": "80"
                  }
                ]
